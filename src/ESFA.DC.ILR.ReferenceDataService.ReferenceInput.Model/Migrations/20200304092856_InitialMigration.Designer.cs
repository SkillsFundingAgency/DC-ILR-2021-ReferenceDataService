// <auto-generated />
using System;
using ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Migrations
{
    [DbContext(typeof(ReferenceInputDataContext))]
    [Migration("20200304092856_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.AppsEarningHistory_ApprenticeshipEarningsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppIdentifier")
                        .HasMaxLength(2000);

                    b.Property<bool?>("AppProgCompletedInTheYearInput");

                    b.Property<string>("CollectionReturnCode")
                        .HasMaxLength(2000);

                    b.Property<string>("CollectionYear")
                        .HasMaxLength(2000);

                    b.Property<int?>("DaysInYear");

                    b.Property<int?>("FworkCode");

                    b.Property<DateTime?>("HistoricEffectiveTNPStartDateInput")
                        .HasColumnType("datetime");

                    b.Property<long?>("HistoricEmpIdEndWithinYear");

                    b.Property<long?>("HistoricEmpIdStartWithinYear");

                    b.Property<DateTime?>("HistoricLearnDelProgEarliestACT2DateInput")
                        .HasColumnType("datetime");

                    b.Property<bool?>("HistoricLearner1618StartInput");

                    b.Property<decimal?>("HistoricPMRAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricTNP1Input")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricTNP2Input")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricTNP3Input")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricTNP4Input")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricTotal1618UpliftPaymentsInTheYearInput")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricVirtualTNP3EndOfTheYearInput")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HistoricVirtualTNP4EndOfTheYearInput")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("LatestInYear");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(2000);

                    b.Property<int?>("ProgType");

                    b.Property<DateTime?>("ProgrammeStartDateIgnorePathway")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProgrammeStartDateMatchPathway")
                        .HasColumnType("datetime");

                    b.Property<int?>("PwayCode");

                    b.Property<int?>("STDCode");

                    b.Property<decimal?>("TotalProgAimPaymentsInTheYear")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UKPRN");

                    b.Property<long>("ULN");

                    b.Property<DateTime?>("UptoEndDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("AppsEarningHistory_ApprenticeshipEarningsHistory","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.EPAOrganisations_EPAOrganisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Standard")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("EPAOrganisations_EPAOrganisation","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Employers_Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ERN");

                    b.HasKey("Id");

                    b.ToTable("Employers_Employer","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Employers_LargeEmployerEffectiveDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Employers_Employer_Id");

                    b.HasKey("Id");

                    b.HasIndex("Employers_Employer_Id");

                    b.ToTable("Employers_LargeEmployerEffectiveDates","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Employers_LargeEmployerVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Employers_LargeEmployerVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Benefits");

                    b.Property<int?>("CalcMethod");

                    b.Property<string>("LotReference")
                        .HasMaxLength(2000);

                    b.Property<int?>("MaxAge");

                    b.Property<int?>("MaxLengthOfUnemployment");

                    b.Property<string>("MaxPriorAttainment")
                        .HasMaxLength(2000);

                    b.Property<int?>("MinAge");

                    b.Property<int?>("MinLengthOfUnemployment");

                    b.Property<string>("MinPriorAttainment")
                        .HasMaxLength(2000);

                    b.Property<string>("TenderSpecReference")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("FCS_EsfEligibilityRule","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleEmploymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int?>("FCS_EsfEligibilityRule_Id");

                    b.HasKey("Id");

                    b.HasIndex("FCS_EsfEligibilityRule_Id");

                    b.ToTable("FCS_EsfEligibilityRuleEmploymentStatus","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleLocalAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("FCS_EsfEligibilityRule_Id");

                    b.HasKey("Id");

                    b.HasIndex("FCS_EsfEligibilityRule_Id");

                    b.ToTable("FCS_EsfEligibilityRuleLocalAuthority","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleLocalEnterprisePartnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("FCS_EsfEligibilityRule_Id");

                    b.HasKey("Id");

                    b.HasIndex("FCS_EsfEligibilityRule_Id");

                    b.ToTable("FCS_EsfEligibilityRuleLocalEnterprisePartnership","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleSectorSubjectAreaLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FCS_EsfEligibilityRule_Id");

                    b.Property<string>("MaxLevelCode");

                    b.Property<string>("MinLevelCode");

                    b.Property<decimal?>("SectorSubjectAreaCode")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FCS_EsfEligibilityRule_Id");

                    b.ToTable("FCS_EsfEligibilityRuleSectorSubjectAreaLevel","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_FcsContractAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractAllocationNumber");

                    b.Property<int>("DeliveryUKPRN");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EsfEligibilityRule_Id");

                    b.Property<string>("FundingStreamPeriodCode");

                    b.Property<decimal?>("LearningRatePremiumFactor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LotReference");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StopNewStartsFromDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TenderSpecReference");

                    b.HasKey("Id");

                    b.HasIndex("EsfEligibilityRule_Id");

                    b.ToTable("FCS_FcsContractAllocation","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_FcsContractDeliverable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeliverableCode");

                    b.Property<string>("DeliverableDescription");

                    b.Property<string>("ExternalDeliverableCode");

                    b.Property<int?>("FCS_FcsContractAllocation_Id");

                    b.Property<decimal?>("PlannedValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("PlannedVolume");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FCS_FcsContractAllocation_Id");

                    b.ToTable("FCS_FcsContractDeliverable","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_FrmLearner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int>("AimType");

                    b.Property<int>("CompStatus");

                    b.Property<int>("FundModel");

                    b.Property<int?>("FworkCodeNullable");

                    b.Property<DateTime?>("LearnActEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LearnAimRef")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("LearnPlanEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("LearnStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LearningAimTitle")
                        .HasMaxLength(2000);

                    b.Property<string>("OrgName")
                        .HasMaxLength(2000);

                    b.Property<int?>("OtherFundAdj");

                    b.Property<int?>("Outcome");

                    b.Property<long?>("PMUKPRN");

                    b.Property<string>("PartnerOrgName")
                        .HasMaxLength(2000);

                    b.Property<long?>("PartnerUKPRN");

                    b.Property<string>("PrevLearnRefNumber")
                        .HasMaxLength(2000);

                    b.Property<long?>("PrevUKPRN");

                    b.Property<int?>("PriorLearnFundAdj");

                    b.Property<int?>("ProgTypeNullable");

                    b.Property<int?>("PwayCodeNullable");

                    b.Property<string>("SWSupAimId")
                        .HasMaxLength(2000);

                    b.Property<int?>("StdCodeNullable");

                    b.Property<long>("UKPRN");

                    b.Property<long>("ULN");

                    b.HasKey("Id");

                    b.ToTable("FRM_FrmLearner","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_FrmReferenceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("FRM_FrmReferenceData","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_LearningDeliveryFAM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FRM_FrmLearner_Id");

                    b.Property<string>("LearnDelFAMCode");

                    b.Property<DateTime?>("LearnDelFAMDateFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LearnDelFAMDateTo")
                        .HasColumnType("datetime");

                    b.Property<string>("LearnDelFAMType");

                    b.HasKey("Id");

                    b.HasIndex("FRM_FrmLearner_Id");

                    b.ToTable("FRM_LearningDeliveryFAM","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_ProviderSpecDeliveryMonitoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FRM_FrmLearner_Id");

                    b.Property<string>("ProvSpecDelMon");

                    b.Property<string>("ProvSpecDelMonOccur");

                    b.HasKey("Id");

                    b.HasIndex("FRM_FrmLearner_Id");

                    b.ToTable("FRM_ProviderSpecDeliveryMonitoring","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_ProviderSpecLearnerMonitoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FRM_FrmLearner_Id");

                    b.Property<string>("ProvSpecLearnMon");

                    b.Property<string>("ProvSpecLearnMonOccur");

                    b.HasKey("Id");

                    b.HasIndex("FRM_FrmLearner_Id");

                    b.ToTable("FRM_ProviderSpecLearnerMonitoring","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSAnnualValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasicSkills");

                    b.Property<int?>("BasicSkillsType");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("FullLevel2EntitlementCategory");

                    b.Property<decimal?>("FullLevel2Percent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("FullLevel3EntitlementCategory");

                    b.Property<decimal?>("FullLevel3Percent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("LARS_LARSLearningDelivery_Id");

                    b.Property<string>("LearnAimRef");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSLearningDelivery_Id");

                    b.ToTable("LARS_LARSAnnualValue","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkAim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("FrameworkComponentType");

                    b.Property<int?>("FworkCode");

                    b.Property<string>("LearnAimRef")
                        .HasMaxLength(2000);

                    b.Property<int?>("ProgType");

                    b.Property<int?>("PwayCode");

                    b.HasKey("Id");

                    b.ToTable("LARS_LARSFrameworkAim","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkApprenticeshipFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BandNumber");

                    b.Property<decimal?>("CareLeaverAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("CoreGovContributionCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("FundableWithoutEmployer");

                    b.Property<string>("FundingCategory");

                    b.Property<int?>("LARS_LARSFrameworkDesktop_Id");

                    b.Property<decimal?>("MaxEmployerLevyCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ReservedValue2")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ReservedValue3")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenEmployerAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenFrameworkUplift")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenIncentive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenProviderAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSFrameworkDesktop_Id");

                    b.ToTable("LARS_LARSFrameworkApprenticeshipFunding","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkCommonComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommonComponent");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LARS_LARSFrameworkDesktop_Id");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSFrameworkDesktop_Id");

                    b.ToTable("LARS_LARSFrameworkCommonComponent","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkDesktop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EffectiveFromNullable")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int>("FworkCode");

                    b.Property<int>("ProgType");

                    b.Property<int>("PwayCode");

                    b.HasKey("Id");

                    b.ToTable("LARS_LARSFrameworkDesktop","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("FundingCategory");

                    b.Property<int?>("LARS_LARSLearningDelivery_Id");

                    b.Property<string>("LearnAimRef");

                    b.Property<decimal?>("RateUnWeighted")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RateWeighted")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WeightingFactor");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSLearningDelivery_Id");

                    b.ToTable("LARS_LARSFunding","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardOrgCode")
                        .HasMaxLength(2000);

                    b.Property<int?>("EFACOFType");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("EnglPrscID");

                    b.Property<string>("EnglandFEHEStatus")
                        .HasMaxLength(2000);

                    b.Property<int?>("FrameworkCommonComponent");

                    b.Property<string>("LearnAimRef")
                        .HasMaxLength(2000);

                    b.Property<string>("LearnAimRefTitle")
                        .HasMaxLength(2000);

                    b.Property<string>("LearnAimRefType")
                        .HasMaxLength(2000);

                    b.Property<string>("LearnDirectClassSystemCode1")
                        .HasMaxLength(2000);

                    b.Property<string>("LearnDirectClassSystemCode2")
                        .HasMaxLength(2000);

                    b.Property<string>("LearnDirectClassSystemCode3")
                        .HasMaxLength(2000);

                    b.Property<string>("LearningDeliveryGenre")
                        .HasMaxLength(2000);

                    b.Property<string>("NotionalNVQLevel")
                        .HasMaxLength(2000);

                    b.Property<string>("NotionalNVQLevelv2")
                        .HasMaxLength(2000);

                    b.Property<int?>("RegulatedCreditValue");

                    b.Property<decimal?>("SectorSubjectAreaTier1")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SectorSubjectAreaTier2")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("LARS_LARSLearningDelivery","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDeliveryCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryRef");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LARS_LARSLearningDelivery_Id");

                    b.Property<string>("LearnAimRef");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSLearningDelivery_Id");

                    b.ToTable("LARS_LARSLearningDeliveryCategory","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("NotionalEndLevel")
                        .HasMaxLength(2000);

                    b.Property<int>("StandardCode");

                    b.Property<string>("StandardSectorCode")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("LARS_LARSStandard","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardApprenticeshipFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BandNumber");

                    b.Property<decimal?>("CareLeaverAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("CoreGovContributionCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("FundableWithoutEmployer");

                    b.Property<string>("FundingCategory");

                    b.Property<int?>("LARS_LARSStandard_Id");

                    b.Property<decimal?>("MaxEmployerLevyCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProgType");

                    b.Property<int?>("PwayCode");

                    b.Property<decimal?>("ReservedValue2")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ReservedValue3")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenEmployerAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenFrameworkUplift")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenIncentive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SixteenToEighteenProviderAdditionalPayment")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSStandard_Id");

                    b.ToTable("LARS_LARSStandardApprenticeshipFunding","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardCommonComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommonComponent");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LARS_LARSStandard_Id");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSStandard_Id");

                    b.ToTable("LARS_LARSStandardCommonComponent","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AchievementIncentive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BandNumber");

                    b.Property<decimal?>("CoreGovContributionCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("FundableWithoutEmployer");

                    b.Property<string>("FundingCategory");

                    b.Property<int?>("LARS_LARSStandard_Id");

                    b.Property<decimal?>("SixteenToEighteenIncentive")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SmallBusinessIncentive")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSStandard_Id");

                    b.ToTable("LARS_LARSStandardFunding","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardValidity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LARS_LARSStandard_Id");

                    b.Property<DateTime?>("LastNewStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ValidityCategory");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSStandard_Id");

                    b.ToTable("LARS_LARSStandardValidity","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSValidity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LARS_LARSLearningDelivery_Id");

                    b.Property<DateTime?>("LastNewStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LearnAimRef");

                    b.Property<string>("ValidityCategory");

                    b.HasKey("Id");

                    b.HasIndex("LARS_LARSLearningDelivery_Id");

                    b.ToTable("LARS_LARSValidity","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("LARS_LARSVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.McaContracts_McaDevolvedContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("McaGlaShortCode")
                        .HasMaxLength(2000);

                    b.Property<int>("Ukprn");

                    b.HasKey("Id");

                    b.ToTable("McaContracts_McaDevolvedContract","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_CampusIdentifierVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_CampusIdentifierVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_CensusDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime");

                    b.Property<int>("Period");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MetaData_CensusDate","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_CoFVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_CoFVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_DevolvedPostcodesVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_DevolvedPostcodesVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_EasUploadDateTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("UploadDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MetaData_EasUploadDateTime","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_EmployersVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_EmployersVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_HmppPostcodesVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_HmppPostcodesVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_IlrCollectionDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("MetaData_IlrCollectionDates","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_LarsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_LarsVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_Lookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_Lookup","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_LookupSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("MetaData_Lookup_Id");

                    b.HasKey("Id");

                    b.HasIndex("MetaData_Lookup_Id");

                    b.ToTable("MetaData_LookupSubCategory","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_MetaData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollectionDates_Id");

                    b.Property<DateTime>("DateGenerated")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReferenceDataVersions_Id");

                    b.HasKey("Id");

                    b.HasIndex("CollectionDates_Id");

                    b.HasIndex("ReferenceDataVersions_Id");

                    b.ToTable("MetaData_MetaData","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_OrganisationsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_OrganisationsVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_PostcodeFactorsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_PostcodeFactorsVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_PostcodesVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_PostcodesVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_ReferenceDataVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampusIdentifierVersion_Id");

                    b.Property<int?>("CoFVersion_Id");

                    b.Property<int?>("DevolvedPostcodesVersion_Id");

                    b.Property<int?>("EasUploadDateTime_Id");

                    b.Property<int?>("Employers_Id");

                    b.Property<int?>("HmppPostcodesVersion_Id");

                    b.Property<int?>("LarsVersion_Id");

                    b.Property<int?>("OrganisationsVersion_Id");

                    b.Property<int?>("PostcodeFactorsVersion_Id");

                    b.Property<int?>("PostcodesVersion_Id");

                    b.HasKey("Id");

                    b.HasIndex("CampusIdentifierVersion_Id");

                    b.HasIndex("CoFVersion_Id");

                    b.HasIndex("DevolvedPostcodesVersion_Id");

                    b.HasIndex("EasUploadDateTime_Id");

                    b.HasIndex("Employers_Id");

                    b.HasIndex("HmppPostcodesVersion_Id");

                    b.HasIndex("LarsVersion_Id");

                    b.HasIndex("OrganisationsVersion_Id");

                    b.HasIndex("PostcodeFactorsVersion_Id");

                    b.HasIndex("PostcodesVersion_Id");

                    b.ToTable("MetaData_ReferenceDataVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_ValidationError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasMaxLength(2000);

                    b.Property<string>("RuleName")
                        .HasMaxLength(2000);

                    b.Property<int>("Severity");

                    b.HasKey("Id");

                    b.ToTable("MetaData_ValidationError","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_ValidationRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Desktop");

                    b.Property<bool>("Online");

                    b.Property<string>("RuleName")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("MetaData_ValidationRule","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LegalOrgType")
                        .HasMaxLength(2000);

                    b.Property<bool?>("LongTermResid");

                    b.Property<string>("Name")
                        .HasMaxLength(2000);

                    b.Property<bool?>("PartnerUKPRN");

                    b.Property<int>("UKPRN");

                    b.HasKey("Id");

                    b.ToTable("Organisations_Organisation","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationCampusIdentifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampusIdentifier");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Organisations_Organisation_Id");

                    b.Property<long>("UKPRN");

                    b.HasKey("Id");

                    b.HasIndex("Organisations_Organisation_Id");

                    b.ToTable("Organisations_OrganisationCampusIdentifier","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationCoFRemoval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CoFRemoval")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Organisations_Organisation_Id");

                    b.HasKey("Id");

                    b.HasIndex("Organisations_Organisation_Id");

                    b.ToTable("Organisations_OrganisationCoFRemoval","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("OrgFundFactType");

                    b.Property<string>("OrgFundFactValue");

                    b.Property<string>("OrgFundFactor");

                    b.Property<int?>("Organisations_Organisation_Id");

                    b.HasKey("Id");

                    b.HasIndex("Organisations_Organisation_Id");

                    b.ToTable("Organisations_OrganisationFunding","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Version")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Organisations_OrganisationVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_SpecialistResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsSpecialistResource");

                    b.Property<int?>("Organisations_OrganisationCampusIdentifier_Id");

                    b.HasKey("Id");

                    b.HasIndex("Organisations_OrganisationCampusIdentifier_Id");

                    b.ToTable("Organisations_SpecialistResource","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_DevolvedPostcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("PostcodesDevolution_DevolvedPostcodes","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_McaGlaSofLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("McaGlaFullName");

                    b.Property<string>("McaGlaShortCode");

                    b.Property<int?>("PostcodesDevolution_DevolvedPostcodes_Id");

                    b.Property<string>("SofCode");

                    b.HasKey("Id");

                    b.HasIndex("PostcodesDevolution_DevolvedPostcodes_Id");

                    b.ToTable("PostcodesDevolution_McaGlaSofLookup","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_Postcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Postcode");

                    b.Property<int?>("PostcodesDevolution_DevolvedPostcodes_Id");

                    b.Property<string>("SourceOfFunding");

                    b.HasKey("Id");

                    b.HasIndex("PostcodesDevolution_DevolvedPostcodes_Id");

                    b.ToTable("PostcodesDevolution_Postcode","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_DasDisadvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.Property<decimal?>("Uplift")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_DasDisadvantage","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_EfaDisadvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.Property<decimal?>("Uplift")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_EfaDisadvantage","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_McaglaSOF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.Property<string>("SofCode");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_McaglaSOF","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_ONSData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Lep1");

                    b.Property<string>("Lep2");

                    b.Property<string>("LocalAuthority");

                    b.Property<string>("Nuts");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.Property<DateTime?>("Termination")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_ONSData","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_PostCodeVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostcodeCurrentVersion")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Postcodes_PostCodeVersion","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostCode")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Postcodes_Postcode","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_SfaAreaCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaCostFactor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_SfaAreaCost","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_SfaDisadvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime");

                    b.Property<int?>("Postcodes_Postcode_Id");

                    b.Property<decimal?>("Uplift")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Postcodes_Postcode_Id");

                    b.ToTable("Postcodes_SfaDisadvantage","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.ULN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UniqueLearnerNumber");

                    b.HasKey("Id");

                    b.ToTable("ULNs","ReferenceInput");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Employers_LargeEmployerEffectiveDate", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Employers_Employer", "Employers_Employer_")
                        .WithMany("Employers_LargeEmployerEffectiveDates")
                        .HasForeignKey("Employers_Employer_Id")
                        .HasConstraintName("FK_ReferenceInput.Employers_LargeEmployerEffectiveDates_ReferenceInput.Employers_Employer_Employer_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleEmploymentStatus", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", "FCS_EsfEligibilityRule_")
                        .WithMany("FCS_EsfEligibilityRuleEmploymentStatuses")
                        .HasForeignKey("FCS_EsfEligibilityRule_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_EsfEligibilityRuleEmploymentStatus_ReferenceInput.FCS_EsfEligibilityRule_EsfEligibilityRule_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleLocalAuthority", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", "FCS_EsfEligibilityRule_")
                        .WithMany("FCS_EsfEligibilityRuleLocalAuthorities")
                        .HasForeignKey("FCS_EsfEligibilityRule_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_EsfEligibilityRuleLocalAuthority_ReferenceInput.FCS_EsfEligibilityRule_EsfEligibilityRule_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleLocalEnterprisePartnership", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", "FCS_EsfEligibilityRule_")
                        .WithMany("FCS_EsfEligibilityRuleLocalEnterprisePartnerships")
                        .HasForeignKey("FCS_EsfEligibilityRule_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_EsfEligibilityRuleLocalEnterprisePartnership_ReferenceInput.FCS_EsfEligibilityRule_EsfEligibilityRule_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRuleSectorSubjectAreaLevel", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", "FCS_EsfEligibilityRule_")
                        .WithMany("FCS_EsfEligibilityRuleSectorSubjectAreaLevels")
                        .HasForeignKey("FCS_EsfEligibilityRule_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_EsfEligibilityRuleSectorSubjectAreaLevel_ReferenceInput.FCS_EsfEligibilityRule_EsfEligibilityRule_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_FcsContractAllocation", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_EsfEligibilityRule", "EsfEligibilityRule_")
                        .WithMany("FCS_FcsContractAllocations")
                        .HasForeignKey("EsfEligibilityRule_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_FcsContractAllocation_ReferenceInput.FCS_EsfEligibilityRule_EsfEligibilityRule_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_FcsContractDeliverable", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FCS_FcsContractAllocation", "FCS_FcsContractAllocation_")
                        .WithMany("FCS_FcsContractDeliverables")
                        .HasForeignKey("FCS_FcsContractAllocation_Id")
                        .HasConstraintName("FK_ReferenceInput.FCS_FcsContractDeliverable_ReferenceInput.FCS_FcsContractAllocation_FcsContractAllocation_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_LearningDeliveryFAM", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_FrmLearner", "FRM_FrmLearner_")
                        .WithMany("FRM_LearningDeliveryFAMs")
                        .HasForeignKey("FRM_FrmLearner_Id")
                        .HasConstraintName("FK_ReferenceInput.FRM_LearningDeliveryFAM_ReferenceInput.FRM_FrmLearner_FrmLearner_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_ProviderSpecDeliveryMonitoring", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_FrmLearner", "FRM_FrmLearner_")
                        .WithMany("FRM_ProviderSpecDeliveryMonitorings")
                        .HasForeignKey("FRM_FrmLearner_Id")
                        .HasConstraintName("FK_ReferenceInput.FRM_ProviderSpecDeliveryMonitoring_ReferenceInput.FRM_FrmLearner_FrmLearner_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_ProviderSpecLearnerMonitoring", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.FRM_FrmLearner", "FRM_FrmLearner_")
                        .WithMany("FRM_ProviderSpecLearnerMonitorings")
                        .HasForeignKey("FRM_FrmLearner_Id")
                        .HasConstraintName("FK_ReferenceInput.FRM_ProviderSpecLearnerMonitoring_ReferenceInput.FRM_FrmLearner_FrmLearner_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSAnnualValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDelivery", "LARS_LARSLearningDelivery_")
                        .WithMany("LARS_LARSAnnualValues")
                        .HasForeignKey("LARS_LARSLearningDelivery_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSAnnualValue_ReferenceInput.LARS_LARSLearningDelivery_LARSLearningDelivery_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkApprenticeshipFunding", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkDesktop", "LARS_LARSFrameworkDesktop_")
                        .WithMany("LARS_LARSFrameworkApprenticeshipFundings")
                        .HasForeignKey("LARS_LARSFrameworkDesktop_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSFrameworkApprenticeshipFunding_ReferenceInput.LARS_LARSFrameworkDesktop_LARSFrameworkDesktop_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkCommonComponent", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFrameworkDesktop", "LARS_LARSFrameworkDesktop_")
                        .WithMany("LARS_LARSFrameworkCommonComponents")
                        .HasForeignKey("LARS_LARSFrameworkDesktop_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSFrameworkCommonComponent_ReferenceInput.LARS_LARSFrameworkDesktop_LARSFrameworkDesktop_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSFunding", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDelivery", "LARS_LARSLearningDelivery_")
                        .WithMany("LARS_LARSFundings")
                        .HasForeignKey("LARS_LARSLearningDelivery_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSFunding_ReferenceInput.LARS_LARSLearningDelivery_LARSLearningDelivery_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDeliveryCategory", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDelivery", "LARS_LARSLearningDelivery_")
                        .WithMany("LARS_LARSLearningDeliveryCategories")
                        .HasForeignKey("LARS_LARSLearningDelivery_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSLearningDeliveryCategory_ReferenceInput.LARS_LARSLearningDelivery_LARSLearningDelivery_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardApprenticeshipFunding", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandard", "LARS_LARSStandard_")
                        .WithMany("LARS_LARSStandardApprenticeshipFundings")
                        .HasForeignKey("LARS_LARSStandard_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSStandardApprenticeshipFunding_ReferenceInput.LARS_LARSStandard_LARSStandard_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardCommonComponent", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandard", "LARS_LARSStandard_")
                        .WithMany("LARS_LARSStandardCommonComponents")
                        .HasForeignKey("LARS_LARSStandard_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSStandardCommonComponent_ReferenceInput.LARS_LARSStandard_LARSStandard_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardFunding", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandard", "LARS_LARSStandard_")
                        .WithMany("LARS_LARSStandardFundings")
                        .HasForeignKey("LARS_LARSStandard_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSStandardFunding_ReferenceInput.LARS_LARSStandard_LARSStandard_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandardValidity", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSStandard", "LARS_LARSStandard_")
                        .WithMany("LARS_LARSStandardValidities")
                        .HasForeignKey("LARS_LARSStandard_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSStandardValidity_ReferenceInput.LARS_LARSStandard_LARSStandard_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSValidity", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.LARS_LARSLearningDelivery", "LARS_LARSLearningDelivery_")
                        .WithMany("LARS_LARSValidities")
                        .HasForeignKey("LARS_LARSLearningDelivery_Id")
                        .HasConstraintName("FK_ReferenceInput.LARS_LARSValidity_ReferenceInput.LARS_LARSLearningDelivery_LARSLearningDelivery_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_LookupSubCategory", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_Lookup", "MetaData_Lookup_")
                        .WithMany("MetaData_LookupSubCategories")
                        .HasForeignKey("MetaData_Lookup_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_LookupSubCategory_ReferenceInput.MetaData_Lookup_Lookup_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_MetaData", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_IlrCollectionDate", "CollectionDates_")
                        .WithMany("MetaData_MetaDatas")
                        .HasForeignKey("CollectionDates_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_MetaData_ReferenceInput.MetaData_IlrCollectionDates_CollectionDates_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_ReferenceDataVersion", "ReferenceDataVersions_")
                        .WithMany("MetaData_MetaDatas")
                        .HasForeignKey("ReferenceDataVersions_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_MetaData_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceDataVersions_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_ReferenceDataVersion", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_CampusIdentifierVersion", "CampusIdentifierVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("CampusIdentifierVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_CampusIdentifierVersion_CampusIdentifierVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_CoFVersion", "CoFVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("CoFVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_CoFVersion_CoFVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_DevolvedPostcodesVersion", "DevolvedPostcodesVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("DevolvedPostcodesVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_DevolvedPostcodesVersion_DevolvedPostcodesVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_EasUploadDateTime", "EasUploadDateTime_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("EasUploadDateTime_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_EasUploadDateTime_EasUploadDateTime_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_EmployersVersion", "Employers_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("Employers_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_EmployersVersion_Employers_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_HmppPostcodesVersion", "HmppPostcodesVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("HmppPostcodesVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_HmppPostcodesVersion_HmppPostcodesVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_LarsVersion", "LarsVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("LarsVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_LarsVersion_LarsVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_OrganisationsVersion", "OrganisationsVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("OrganisationsVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_OrganisationsVersion_OrganisationsVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_PostcodeFactorsVersion", "PostcodeFactorsVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("PostcodeFactorsVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_PostcodeFactorsVersion_PostcodeFactorsVersion_Id");

                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.MetaData_PostcodesVersion", "PostcodesVersion_")
                        .WithMany("MetaData_ReferenceDataVersions")
                        .HasForeignKey("PostcodesVersion_Id")
                        .HasConstraintName("FK_ReferenceInput.MetaData_ReferenceDataVersion_ReferenceInput.MetaData_PostcodesVersion_PostcodesVersion_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationCampusIdentifier", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_Organisation", "Organisations_Organisation_")
                        .WithMany("Organisations_OrganisationCampusIdentifiers")
                        .HasForeignKey("Organisations_Organisation_Id")
                        .HasConstraintName("FK_ReferenceInput.Organisations_OrganisationCampusIdentifier_ReferenceInput.Organisations_Organisation_Organisation_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationCoFRemoval", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_Organisation", "Organisations_Organisation_")
                        .WithMany("Organisations_OrganisationCoFRemovals")
                        .HasForeignKey("Organisations_Organisation_Id")
                        .HasConstraintName("FK_ReferenceInput.Organisations_OrganisationCoFRemoval_ReferenceInput.Organisations_Organisation_Organisation_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationFunding", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_Organisation", "Organisations_Organisation_")
                        .WithMany("Organisations_OrganisationFundings")
                        .HasForeignKey("Organisations_Organisation_Id")
                        .HasConstraintName("FK_ReferenceInput.Organisations_OrganisationFunding_ReferenceInput.Organisations_Organisation_Organisation_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_SpecialistResource", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Organisations_OrganisationCampusIdentifier", "Organisations_OrganisationCampusIdentifier_")
                        .WithMany("Organisations_SpecialistResources")
                        .HasForeignKey("Organisations_OrganisationCampusIdentifier_Id")
                        .HasConstraintName("FK_ReferenceInput.Organisations_SpecialistResource_ReferenceInput.Organisations_OrganisationCampusIdentifier_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_McaGlaSofLookup", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_DevolvedPostcode", "PostcodesDevolution_DevolvedPostcodes_")
                        .WithMany("PostcodesDevolution_McaGlaSofLookups")
                        .HasForeignKey("PostcodesDevolution_DevolvedPostcodes_Id")
                        .HasConstraintName("FK_ReferenceInput.PostcodesDevolution_McaGlaSofLookup_ReferenceInput.PostcodesDevolution_DevolvedPostcodes_DevolvedPostcodes_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_Postcode", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.PostcodesDevolution_DevolvedPostcode", "PostcodesDevolution_DevolvedPostcodes_")
                        .WithMany("PostcodesDevolution_Postcodes")
                        .HasForeignKey("PostcodesDevolution_DevolvedPostcodes_Id")
                        .HasConstraintName("FK_ReferenceInput.PostcodesDevolution_Postcode_ReferenceInput.PostcodesDevolution_DevolvedPostcodes_DevolvedPostcodes_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_DasDisadvantage", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_DasDisadvantages")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_DasDisadvantage_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_EfaDisadvantage", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_EfaDisadvantages")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_EfaDisadvantage_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_McaglaSOF", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_McaglaSOFs")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_McaglaSOF_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_ONSData", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_ONSDatas")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_ONSData_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_SfaAreaCost", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_SfaAreaCosts")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_SfaAreaCost_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });

            modelBuilder.Entity("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_SfaDisadvantage", b =>
                {
                    b.HasOne("ESFA.DC.ILR.ReferenceDataService.ReferenceInput.Model.Postcodes_Postcode", "Postcodes_Postcode_")
                        .WithMany("Postcodes_SfaDisadvantages")
                        .HasForeignKey("Postcodes_Postcode_Id")
                        .HasConstraintName("FK_ReferenceInput.Postcodes_SfaDisadvantage_ReferenceInput.Postcodes_Postcode_Postcode_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
